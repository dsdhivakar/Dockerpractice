name: CI/CD Pipeline

on:
   push:
      branches:
      - master
   pull_request:
      branches:
      - master

jobs:
   build:
      runs-on: ubuntu-latest

      services:
         mysql:
            image: mysql
            env:
               MYSQL_ROOT_PASSWORD: admin
               MYSQL_DATABASE: practice
               MYSQL_USER: test
               MYSQL_PASSWORD: test
            ports:
            - 3307:3306
            options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3
      steps:
      -  name: Checkout code
         uses: actions/checkout@v2
      -  name: install docker compose

         run: |
            sudo apt-get update
            sudo apt-get install -y docker-compose

      -  name: Set up JDK 17
         uses: actions/setup-java@v2
         with:
            java-version: '17'
            distribution: temurin
      -  name: Docker login
         uses: docker/login-action@v2
         with:
            username: ${{secrets.DOCKER_USERNAME}}

            password: ${{secrets.DOCKER_PASSWORD}}
      -  name: List running containers
         run: docker ps
      -  name: Wait for MySQL to be ready
         run: |3


            until docker exec $(docker ps -q --filter ancestor=mysql) mysqladmin --user=root --password=admin --host=localhost --port=3306 ping --silent; do

              echo "Waiting for MySQL..."

              sleep 5
            done
            echo "MySQL is ready!"
      -  name: Build and Test with Maven
         run: mvn clean verify
      -  name: Build Docker Image
         run: docker build -t my-spring-boot-app .

      -  name: Run Docker Compose
         run: docker-compose up -d --build

      -  name: list containers
         run: docker ps
      -  name: Docker compose down
         run: docker-compose down
      
      -  name: Deploy to EB
         uses: einaregilsson/beanstalk-deploy@v18
         with:
            aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
            aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
            application_name: PracticeGitAction
            environment_name: PracticeGitAction-env
            existing_bucket_name: elasticbeanstalk-us-east-1-277707100561
            region: us-east-1
            version_label: ${{ github.sha }}
            deployment_package: target/practice1-0.0.1-SNAPSHOT.jar